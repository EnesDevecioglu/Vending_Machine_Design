library IEEE;
use IEEE.STD_LOGIC_1164.ALL;
use IEEE.numeric_std.all;
use IEEE.std_logic_unsigned.all;
entity twodigit_tb is
end twodigit_tb;
architecture test_gate of twodigit_tb is
component twodigit is
port (
Number1 : in std_logic_vector (5 downto 0);
clk4 : in std_logic;
out7 : out std_logic_vector (6 downto 0);
en_out : out std_logic_vector (3 downto 0)
);
end component;
signal Number1_t : std_logic_vector (5 downto 0);
signal clk4_t : std_logic:='0';
signal out7_t : std_logic_vector (6 downto 0);
signal en_out_t : std_logic_vector (3 downto 0);
constant clk_period : time := 10 ns;
begin
UUT: twodigit port map (
Number1 => Number1_t,
clk4 => clk4_t,
out7 => out7_t,
en_out => en_out_t
);
clk_process :process
begin
clk4_t <='0';
wait for clk_period/2;
clk4_t <='1';
wait for clk_period/2;
end process clk_process;
Number_process : process
 begin
 for i in 0 to 63 loop
 Number1_t <= std_logic_vector(to_unsigned(i, Number1_t'length));
 wait for 10ns;
 end loop;
--Number1_t(5) <= '0';
--Number1_t(4) <= '0';
--Number1_t(3) <= '0';
--Number1_t(2) <= '1';
--Number1_t(1) <= '1';
--Number1_t(0) <= '1';
--wait for 200ns;
--Number1_t(5) <= '0';
--Number1_t(4) <= '1';
--Number1_t(3) <= '1';
--Number1_t(2) <= '1';
--Number1_t(1) <= '1';
--Number1_t(0) <= '1';
wait;
end process Number_process;
end test_gate;
